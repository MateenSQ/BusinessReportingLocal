// <auto-generated />
using System;
using BusinessReportingMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessReportingMVC.Migrations
{
    [DbContext(typeof(BusinessReportingDbContext))]
    [Migration("20240827135347_stoppedUsingProjectCollectionsGaveNameToReports")]
    partial class stoppedUsingProjectCollectionsGaveNameToReports
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessReportingMVC.Models.AdminAndResource", b =>
                {
                    b.Property<int>("AdminAndResourcesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Admin_And_Resources_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminAndResourcesId"));

                    b.Property<string>("PointsOfNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Points_Of_Note");

                    b.HasKey("AdminAndResourcesId")
                        .HasName("PK__Admin_An__68A45A1DC0C40C47");

                    b.ToTable("Admin_And_Resources", (string)null);
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.BusinessDevelopment", b =>
                {
                    b.Property<int>("BusinessDevelopmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Business_Development_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessDevelopmentId"));

                    b.Property<int>("BusinessDevelopmentNotesId")
                        .HasColumnType("int")
                        .HasColumnName("Business_Development_Notes_Id");

                    b.Property<int>("BusinessDevelopmentValueId")
                        .HasColumnType("int")
                        .HasColumnName("Business_Development_Value_Id");

                    b.HasKey("BusinessDevelopmentId")
                        .HasName("PK__Business__6B072B832E5D0812");

                    b.HasIndex("BusinessDevelopmentNotesId");

                    b.HasIndex("BusinessDevelopmentValueId");

                    b.ToTable("Business_Development", (string)null);
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.BusinessDevelopmentNote", b =>
                {
                    b.Property<int>("BusinessDevelopmentNotesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Business_Development_Notes_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessDevelopmentNotesId"));

                    b.Property<string>("AwarenessNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Awareness_Notes");

                    b.Property<string>("IntentNotes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Intent_Notes");

                    b.Property<string>("Tendered033Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tendered_0_33_Notes");

                    b.Property<string>("Tendered3466Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tendered_34_66_Notes");

                    b.Property<string>("Tendered67100Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tendered_67_100_Notes");

                    b.HasKey("BusinessDevelopmentNotesId")
                        .HasName("PK__Business__183BA58283E1C461");

                    b.ToTable("Business_Development_Notes", (string)null);
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.BusinessDevelopmentValue", b =>
                {
                    b.Property<int>("BusinessDevelopmentValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Business_Development_Value_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessDevelopmentValueId"));

                    b.Property<decimal?>("AwarenessValue")
                        .HasColumnType("money")
                        .HasColumnName("Awareness_Value");

                    b.Property<decimal?>("IntentValue")
                        .HasColumnType("money")
                        .HasColumnName("Intent_Value");

                    b.Property<decimal?>("Tendered033Value")
                        .HasColumnType("money")
                        .HasColumnName("Tendered_0_33_Value");

                    b.Property<decimal?>("Tendered3466Value")
                        .HasColumnType("money")
                        .HasColumnName("Tendered_34_66_Value");

                    b.Property<decimal?>("Tendered67100Value")
                        .HasColumnType("money")
                        .HasColumnName("Tendered_67_100_Value");

                    b.HasKey("BusinessDevelopmentValueId")
                        .HasName("PK__Business__3F0FE71E2DF027E6");

                    b.ToTable("Business_Development_Value", (string)null);
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.Claim", b =>
                {
                    b.Property<int>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Claim_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimId"));

                    b.Property<string>("ClaimName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Claim_Name");

                    b.Property<int>("ClaimTypeId")
                        .HasColumnType("int")
                        .HasColumnName("Claim_Type_Id");

                    b.HasKey("ClaimId")
                        .HasName("PK__Claims__811C4A6DA9BBB0DC");

                    b.HasIndex("ClaimTypeId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.ClaimsType", b =>
                {
                    b.Property<int>("ClaimsTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Claims_Type_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimsTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaimsTypeId")
                        .HasName("PK__Claims_T__39C8D3400682BDFD");

                    b.ToTable("Claims_Type", (string)null);
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.Financial", b =>
                {
                    b.Property<int>("FinancialsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Financials_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialsId"));

                    b.Property<int>("FinancialsActualId")
                        .HasColumnType("int")
                        .HasColumnName("Financials_Actual_Id");

                    b.Property<int>("FinancialsDeviationId")
                        .HasColumnType("int")
                        .HasColumnName("Financials_Deviation_Id");

                    b.HasKey("FinancialsId")
                        .HasName("PK__Financia__08CC3C0C462CA1E3");

                    b.HasIndex("FinancialsActualId");

                    b.HasIndex("FinancialsDeviationId");

                    b.ToTable("Financials");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.FinancialsActual", b =>
                {
                    b.Property<int>("FinancialsActualId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Financials_Actual_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialsActualId"));

                    b.Property<decimal?>("CashPositionActual")
                        .HasColumnType("money")
                        .HasColumnName("Cash_Position_Actual");

                    b.Property<decimal?>("DirectCostsActual")
                        .HasColumnType("money")
                        .HasColumnName("Direct_Costs_Actual");

                    b.Property<decimal?>("GrossProfitActual")
                        .HasColumnType("money")
                        .HasColumnName("Gross_Profit_Actual");

                    b.Property<decimal?>("IndirectCostsActual")
                        .HasColumnType("money")
                        .HasColumnName("Indirect_Costs_Actual");

                    b.Property<decimal?>("NetProfitActual")
                        .HasColumnType("money")
                        .HasColumnName("Net_Profit_Actual");

                    b.Property<int?>("ProductionHoursQuarter")
                        .HasColumnType("int")
                        .HasColumnName("Production_Hours_Quarter");

                    b.Property<decimal?>("TurnoverActual")
                        .HasColumnType("money")
                        .HasColumnName("Turnover_Actual");

                    b.Property<decimal?>("UtilisationQuarter")
                        .HasColumnType("money")
                        .HasColumnName("Utilisation_Quarter");

                    b.Property<decimal?>("WipActual")
                        .HasColumnType("money")
                        .HasColumnName("WIP_Actual");

                    b.Property<int?>("WorkInHandHoursQuarter")
                        .HasColumnType("int")
                        .HasColumnName("Work_In_Hand_Hours_Quarter");

                    b.Property<decimal?>("WorkInHandMoneyQuarter")
                        .HasColumnType("money")
                        .HasColumnName("Work_In_Hand_Money_Quarter");

                    b.HasKey("FinancialsActualId")
                        .HasName("PK__Financia__E203C6A10D63F764");

                    b.ToTable("Financials_Actual", (string)null);
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.FinancialsDeviation", b =>
                {
                    b.Property<int>("FinancialsDeviationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Financials_Deviation_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialsDeviationId"));

                    b.Property<decimal?>("CashPositionForecast")
                        .HasColumnType("money")
                        .HasColumnName("Cash_Position_Forecast");

                    b.Property<decimal?>("DirectCostsDeviation")
                        .HasColumnType("money")
                        .HasColumnName("Direct_Costs_Deviation");

                    b.Property<decimal?>("GrossProfitDeviation")
                        .HasColumnType("money")
                        .HasColumnName("Gross_Profit_Deviation");

                    b.Property<decimal?>("IndirectCostsDeviation")
                        .HasColumnType("money")
                        .HasColumnName("Indirect_Costs_Deviation");

                    b.Property<decimal?>("NetProfitDeviation")
                        .HasColumnType("money")
                        .HasColumnName("Net_Profit_Deviation");

                    b.Property<int?>("ProductionHoursDeviation")
                        .HasColumnType("int")
                        .HasColumnName("Production_Hours_Deviation");

                    b.Property<decimal?>("TurnoverDeviation")
                        .HasColumnType("money")
                        .HasColumnName("Turnover_Deviation");

                    b.Property<decimal?>("UtilisationQuarter")
                        .HasColumnType("money")
                        .HasColumnName("Utilisation_Quarter");

                    b.Property<decimal?>("WipDeviation")
                        .HasColumnType("money")
                        .HasColumnName("WIP_Deviation");

                    b.Property<int?>("WorkInHandHoursQuarter")
                        .HasColumnType("int")
                        .HasColumnName("Work_In_Hand_Hours_Quarter");

                    b.Property<decimal?>("WorkInHandMoneyQuarter")
                        .HasColumnType("money")
                        .HasColumnName("Work_In_Hand_Money_Quarter");

                    b.HasKey("FinancialsDeviationId")
                        .HasName("PK__Financia__54D108BB673F35B5");

                    b.ToTable("Financials_Deviation", (string)null);
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.KeyHighlight", b =>
                {
                    b.Property<int>("KeyHighlightsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Key_Highlights_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KeyHighlightsId"));

                    b.Property<string>("Opportunities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Performance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Risks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KeyHighlightsId")
                        .HasName("PK__Key_High__257931E9465F4792");

                    b.ToTable("Key_Highlights", (string)null);
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Project_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("ForecastOverallDeviation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Forecast_Overall_Deviation");

                    b.Property<string>("ForecastOverallForecast")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Forecast_Overall_Forecast");

                    b.HasKey("ProjectId")
                        .HasName("PK__Projects__1CB92E03A486D77B");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.ProjectIndividual", b =>
                {
                    b.Property<int>("ProjectIndividualId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Project_Individual_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectIndividualId"));

                    b.Property<decimal?>("Deviation")
                        .HasColumnType("money");

                    b.Property<decimal?>("ForecastProfit")
                        .HasColumnType("money")
                        .HasColumnName("Forecast_Profit");

                    b.Property<bool?>("IsBottom")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Bottom");

                    b.Property<byte?>("Position")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ProjectCode")
                        .HasColumnType("int")
                        .HasColumnName("Project_Code");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("Project_Id");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Project_Name");

                    b.HasKey("ProjectIndividualId")
                        .HasName("PK__Project___D45D6EACF829D26C");

                    b.HasIndex("ProjectId");

                    b.ToTable("Project_Individual", (string)null);
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Report_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<int>("AdminAndResourcesId")
                        .HasColumnType("int")
                        .HasColumnName("Admin_And_Resources_Id");

                    b.Property<int>("BusinessDevelopmentId")
                        .HasColumnType("int")
                        .HasColumnName("Business_Development_Id");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int")
                        .HasColumnName("Created_By_User_Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_Date");

                    b.Property<int>("FinancialsId")
                        .HasColumnType("int")
                        .HasColumnName("Financials_Id");

                    b.Property<DateTime?>("FromDateRange")
                        .HasColumnType("datetime")
                        .HasColumnName("From_Date_Range");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Draft");

                    b.Property<int>("KeyHighlightsId")
                        .HasColumnType("int")
                        .HasColumnName("Key_Highlights_Id");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("Project_Id");

                    b.Property<string>("ReportName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StrategyId")
                        .HasColumnType("int")
                        .HasColumnName("Strategy_Id");

                    b.Property<DateTime?>("ToDateRange")
                        .HasColumnType("datetime")
                        .HasColumnName("To_Date_Range");

                    b.HasKey("ReportId")
                        .HasName("PK__Reports__30FA9DD1C26854BC");

                    b.HasIndex("AdminAndResourcesId");

                    b.HasIndex("BusinessDevelopmentId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("FinancialsId");

                    b.HasIndex("KeyHighlightsId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StrategyId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.Strategy", b =>
                {
                    b.Property<int>("StrategyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Strategy_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StrategyId"));

                    b.Property<string>("BusinessDevelopment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Business_Development");

                    b.Property<string>("Innovation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StrategyId")
                        .HasName("PK__Strategy__E5DD67A33E1DC879");

                    b.ToTable("Strategy", (string)null);
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Approved");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__206D91701642F188");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.UserClaim", b =>
                {
                    b.Property<int>("UserClaimsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("User_Claims_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserClaimsId"));

                    b.Property<int>("ClaimId")
                        .HasColumnType("int")
                        .HasColumnName("Claim_Id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("UserClaimsId")
                        .HasName("PK__User_Cla__F98D208FA4601562");

                    b.HasIndex("ClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Claims", (string)null);
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.BusinessDevelopment", b =>
                {
                    b.HasOne("BusinessReportingMVC.Models.BusinessDevelopmentNote", "BusinessDevelopmentNotes")
                        .WithMany("BusinessDevelopments")
                        .HasForeignKey("BusinessDevelopmentNotesId")
                        .IsRequired()
                        .HasConstraintName("FK_Business_Development_Notes_Id");

                    b.HasOne("BusinessReportingMVC.Models.BusinessDevelopmentValue", "BusinessDevelopmentValue")
                        .WithMany("BusinessDevelopments")
                        .HasForeignKey("BusinessDevelopmentValueId")
                        .IsRequired()
                        .HasConstraintName("FK_Business_Development_Value_Id");

                    b.Navigation("BusinessDevelopmentNotes");

                    b.Navigation("BusinessDevelopmentValue");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.Claim", b =>
                {
                    b.HasOne("BusinessReportingMVC.Models.ClaimsType", "ClaimType")
                        .WithMany("Claims")
                        .HasForeignKey("ClaimTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_Claim_Type_Id");

                    b.Navigation("ClaimType");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.Financial", b =>
                {
                    b.HasOne("BusinessReportingMVC.Models.FinancialsActual", "FinancialsActual")
                        .WithMany("Financials")
                        .HasForeignKey("FinancialsActualId")
                        .IsRequired()
                        .HasConstraintName("FK_Financials_Actual_Id");

                    b.HasOne("BusinessReportingMVC.Models.FinancialsDeviation", "FinancialsDeviation")
                        .WithMany("Financials")
                        .HasForeignKey("FinancialsDeviationId")
                        .IsRequired()
                        .HasConstraintName("FK_Financials_Deviation_Id");

                    b.Navigation("FinancialsActual");

                    b.Navigation("FinancialsDeviation");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.ProjectIndividual", b =>
                {
                    b.HasOne("BusinessReportingMVC.Models.Project", "Project")
                        .WithMany("ProjectIndividual")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.Report", b =>
                {
                    b.HasOne("BusinessReportingMVC.Models.AdminAndResource", "AdminAndResources")
                        .WithMany("Reports")
                        .HasForeignKey("AdminAndResourcesId")
                        .IsRequired()
                        .HasConstraintName("FK_Admin_And_Resources");

                    b.HasOne("BusinessReportingMVC.Models.BusinessDevelopment", "BusinessDevelopment")
                        .WithMany("Reports")
                        .HasForeignKey("BusinessDevelopmentId")
                        .IsRequired()
                        .HasConstraintName("FK_Business_Development_Id");

                    b.HasOne("BusinessReportingMVC.Models.User", "CreatedByUser")
                        .WithMany("Reports")
                        .HasForeignKey("CreatedByUserId")
                        .IsRequired()
                        .HasConstraintName("FK_Created_By_User_Id");

                    b.HasOne("BusinessReportingMVC.Models.Financial", "Financials")
                        .WithMany("Reports")
                        .HasForeignKey("FinancialsId")
                        .IsRequired()
                        .HasConstraintName("FK_Financials_Id");

                    b.HasOne("BusinessReportingMVC.Models.KeyHighlight", "KeyHighlights")
                        .WithMany("Reports")
                        .HasForeignKey("KeyHighlightsId")
                        .IsRequired()
                        .HasConstraintName("FK_Key_Highlights_Id");

                    b.HasOne("BusinessReportingMVC.Models.Project", "Project")
                        .WithMany("Reports")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK_Project_Id");

                    b.HasOne("BusinessReportingMVC.Models.Strategy", "Strategy")
                        .WithMany("Reports")
                        .HasForeignKey("StrategyId")
                        .IsRequired()
                        .HasConstraintName("FK_Strategy_Id");

                    b.Navigation("AdminAndResources");

                    b.Navigation("BusinessDevelopment");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Financials");

                    b.Navigation("KeyHighlights");

                    b.Navigation("Project");

                    b.Navigation("Strategy");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.UserClaim", b =>
                {
                    b.HasOne("BusinessReportingMVC.Models.Claim", "Claim")
                        .WithMany("UserClaims")
                        .HasForeignKey("ClaimId")
                        .IsRequired()
                        .HasConstraintName("FK_Claims_Id");

                    b.HasOne("BusinessReportingMVC.Models.User", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_User_Claims");

                    b.Navigation("Claim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.AdminAndResource", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.BusinessDevelopment", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.BusinessDevelopmentNote", b =>
                {
                    b.Navigation("BusinessDevelopments");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.BusinessDevelopmentValue", b =>
                {
                    b.Navigation("BusinessDevelopments");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.Claim", b =>
                {
                    b.Navigation("UserClaims");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.ClaimsType", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.Financial", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.FinancialsActual", b =>
                {
                    b.Navigation("Financials");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.FinancialsDeviation", b =>
                {
                    b.Navigation("Financials");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.KeyHighlight", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.Project", b =>
                {
                    b.Navigation("ProjectIndividual");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.Strategy", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("BusinessReportingMVC.Models.User", b =>
                {
                    b.Navigation("Reports");

                    b.Navigation("UserClaims");
                });
#pragma warning restore 612, 618
        }
    }
}
